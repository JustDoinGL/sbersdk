
useEffect(() => {
  const handleBeforeUnload = (event) => {
    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É —á—Ç–æ–±—ã —É—Å–ø–µ—Ç—å —É–≤–∏–¥–µ—Ç—å –∑–∞–ø—Ä–æ—Å –≤ Network
    event.preventDefault();
    
    const data = {
      event: 'tab_close',
      timestamp: new Date().toISOString()
    };

    // –í–∞—Ä–∏–∞–Ω—Ç 1: —Å console.log –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
    console.log('üîÑ –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏...');
    
    fetch('/api/log-close', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(data),
      keepalive: true
    });

    // –í–∞—Ä–∏–∞–Ω—Ç 2: —Å –æ—Ç–ø—Ä–∞–≤–∫–æ–π –≤ —Ç–µ—Å—Ç–æ–≤—ã–π —ç–Ω–¥–ø–æ–∏–Ω—Ç
    fetch('https://httpbin.org/post', {
      method: 'POST',
      body: JSON.stringify(data),
      keepalive: true
    });

    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    const startTime = Date.now();
    while (Date.now() - startTime < 100) {
      // –ñ–¥–µ–º 100ms —á—Ç–æ–±—ã –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ–ª –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è
    }
  };

  window.addEventListener('beforeunload', handleBeforeUnload);
  
  return () => window.removeEventListener('beforeunload', handleBeforeUnload);
}, []);